Source: Tim Hoffmann <thoffmann@texstudio.org> and <jsundermeyer@sf.net>
Upstream: yes
Reason: fix build

This patch combines 5 upstream commits to fix the build with'-std=gnu++0x'.

# HG changeset patch
# User Tim Hoffmann <thoffmann@texstudio.org>
# Date 1462112368 -7200
#      Sun May 01 16:19:28 2016 +0200
# Node ID 91a3b80d1379dad093b489ca34e64bc17d6e632b
# Parent  66ebd51456540cfe2dddc4957a67fc4f066fc032
use cmath instead of math.h (fixes bug 1752)

diff --git a/pdfviewer/PDFDocks.cpp b/pdfviewer/PDFDocks.cpp
--- a/pdfviewer/PDFDocks.cpp
+++ b/pdfviewer/PDFDocks.cpp
@@ -35,7 +35,6 @@
 
 #include "PDFDocks.h"
 #include "PDFDocument.h"
-#include "math.h"
 
 /*!
  * \brief constructor
diff --git a/pdfviewer/PDFDocument.cpp b/pdfviewer/PDFDocument.cpp
--- a/pdfviewer/PDFDocument.cpp
+++ b/pdfviewer/PDFDocument.cpp
@@ -30,7 +30,7 @@
 #include <QUrl>
 #include <QShortcut>
 
-#include <math.h>
+#include <cmath>
 #include "universalinputdialog.h"
 
 #include "configmanager.h"
@@ -965,17 +965,17 @@
 
 	scrollArea->goToPage(page);
 
-	if (isnan(xinpdf)) xinpdf = 0;
+	if (std::isnan(xinpdf)) xinpdf = 0;
 	xinpdf = qBound<float>(0, xinpdf, 1);
-	if (isnan(yinpdf)) yinpdf = 0;
+	if (std::isnan(yinpdf)) yinpdf = 0;
 	yinpdf = qBound<float>(0, yinpdf, 1);
 
 	QPoint p = mapFromScaledPosition(page, QPointF( xinpdf, yinpdf));
 
-	if (!isnan(xinpdf))
+	if (!std::isnan(xinpdf))
 		scrollArea->horizontalScrollBar()->setValue(p.x());
 
-	if (!isnan(yinpdf)) {
+	if (!std::isnan(yinpdf)) {
 		int val = 0;
 		if (scrollArea->getContinuous())
 			val = scrollArea->verticalScrollBar()->value();
diff --git a/toolwidgets.cpp b/toolwidgets.cpp
--- a/toolwidgets.cpp
+++ b/toolwidgets.cpp
@@ -1,5 +1,5 @@
 #include "toolwidgets.h"
-#include "math.h"
+#include "cmath"
 #include "smallUsefulFunctions.h"
 #include "utilsSystem.h"
 #include "configmanagerinterface.h"
@@ -112,7 +112,7 @@
 	if (event->modifiers() == Qt::ControlModifier) {
 		float numDegrees = event->delta() / 8.0f;
 		float numSteps = numDegrees / 15.0f;
-		scaleImage(pow(1.4, numSteps));
+		scaleImage(std::pow(1.4, numSteps));
 		event->accept();
 	} else QScrollArea::wheelEvent(event);
 }
# HG changeset patch
# User Tim Hoffmann <thoffmann@texstudio.org>
# Date 1462117663 -7200
#      Sun May 01 17:47:43 2016 +0200
# Node ID 5b16f01c3b6085c0f47633f6d9d41cb8be82ff51
# Parent  91a3b80d1379dad093b489ca34e64bc17d6e632b
use Qt math functions instead of standard library when possible

diff --git a/pdfviewer/PDFDocument.cpp b/pdfviewer/PDFDocument.cpp
--- a/pdfviewer/PDFDocument.cpp
+++ b/pdfviewer/PDFDocument.cpp
@@ -29,8 +29,9 @@
 #include <QRegion>
 #include <QUrl>
 #include <QShortcut>
-
-#include <cmath>
+#include <QtNumeric>
+#include <QtMath>
+
 #include "universalinputdialog.h"
 
 #include "configmanager.h"
@@ -50,8 +51,6 @@
 #define SYNCTEX_GZ_EXT	".synctex.gz"
 #define SYNCTEX_EXT		".synctex"
 
-#define ROUND(x) floor((x)+0.5)
-
 const qreal kMaxScaleFactor = 4.0;
 const qreal kMinScaleFactor = 0.125;
 
@@ -943,7 +942,7 @@
 void PDFWidget::goToDestination(const Poppler::LinkDestination &dest)
 {
 	if (dest.pageNumber() > 0)
-		goToPageRelativePosition(dest.pageNumber() - 1, dest.isChangeLeft() ? dest.left() : NAN, dest.isChangeTop() ? dest.top() : NAN);
+		goToPageRelativePosition(dest.pageNumber() - 1, dest.isChangeLeft() ? dest.left() : qQNaN(), dest.isChangeTop() ? dest.top() : qQNaN());
 
 	/*if (dest.isChangeZoom()) {
 		// FIXME
@@ -965,17 +964,17 @@
 
 	scrollArea->goToPage(page);
 
-	if (std::isnan(xinpdf)) xinpdf = 0;
+	if (qIsNaN(xinpdf)) xinpdf = 0;
 	xinpdf = qBound<float>(0, xinpdf, 1);
-	if (std::isnan(yinpdf)) yinpdf = 0;
+	if (qIsNaN(yinpdf)) yinpdf = 0;
 	yinpdf = qBound<float>(0, yinpdf, 1);
 
 	QPoint p = mapFromScaledPosition(page, QPointF( xinpdf, yinpdf));
 
-	if (!std::isnan(xinpdf))
+	if (!qIsNaN(xinpdf))
 		scrollArea->horizontalScrollBar()->setValue(p.x());
 
-	if (!std::isnan(yinpdf)) {
+	if (!qIsNaN(yinpdf)) {
 		int val = 0;
 		if (scrollArea->getContinuous())
 			val = scrollArea->verticalScrollBar()->value();
@@ -1207,7 +1206,7 @@
 		if (event->buttons() == Qt::RightButton) {
 			inhibitNextContextMenuEvent = true;
 		}
-		if (qAbs(summedWheelDegrees) >= degreesPerStep ) { //avoid small zoom changes, as they use a lot of memory
+		if (qFabs(summedWheelDegrees) >= degreesPerStep ) { //avoid small zoom changes, as they use a lot of memory
 			doZoom(event->pos(), (summedWheelDegrees > 0) ? 1 : -1);
 			summedWheelDegrees = 0;
 		}
@@ -1220,7 +1219,7 @@
 		if (scrollBar->minimum() < scrollBar->maximum()) { //if scrollbar visible
 			int oldValue = scrollBar->value();
 			const int scrollPerWheelStep = scrollBar->singleStep() * QApplication::wheelScrollLines();
-			scrollBar->setValue(scrollBar->value() - round(scrollPerWheelStep * summedWheelDegrees / degreesPerStep));
+			scrollBar->setValue(scrollBar->value() - qRound(scrollPerWheelStep * summedWheelDegrees / degreesPerStep));
 			int delta = oldValue - scrollBar->value();
 			if (delta != 0) {
 				lastScrollTime = QTime::currentTime();
@@ -1887,14 +1886,14 @@
 	QPoint globalPos = mapToGlobal(clickPos);
 	if (dir > 0 && scaleFactor < kMaxScaleFactor) {
 		scaleFactor *= zoomStepFactor;
-		if (fabs(scaleFactor - ROUND(scaleFactor)) < 0.01)
-			scaleFactor = ROUND(scaleFactor);
+		if (qFabs(scaleFactor - qRound(scaleFactor)) < 0.01)
+			scaleFactor = qRound(scaleFactor);
 		if (scaleFactor > kMaxScaleFactor)
 			scaleFactor = kMaxScaleFactor;
 	} else if (dir < 0 && scaleFactor > kMinScaleFactor) {
 		scaleFactor /= zoomStepFactor;
-		if (fabs(scaleFactor - ROUND(scaleFactor)) < 0.01)
-			scaleFactor = ROUND(scaleFactor);
+		if (qFabs(scaleFactor - qRound(scaleFactor)) < 0.01)
+			scaleFactor = qRound(scaleFactor);
 		if (scaleFactor < kMinScaleFactor)
 			scaleFactor = kMinScaleFactor;
 	} else if (dir == 0) {
@@ -2957,7 +2956,7 @@
 			pdfWidget->setFocus();
 
 		// set page viewer only once
-		int maxDigits = 1 + floor(log10(pdfWidget->realNumPages()));
+		int maxDigits = 1 + qFloor(std::log10(pdfWidget->realNumPages()));
 		//if (maxDigits < 2) maxDigits = 2;
 		leCurrentPage->setMaxLength(maxDigits);
 		leCurrentPage->setFixedWidth(fontMetrics().width(QString(maxDigits + 1, '#')));
@@ -3593,7 +3592,7 @@
 
 void PDFDocument::showScale(qreal scale)
 {
-	QString scaleString = QString("%1%").arg(ROUND(scale * 100.0));
+	QString scaleString = QString("%1%").arg(qRound(scale * 100.0));
 	scaleButton->setText(scaleString);
 	zoomSlider->blockSignals(true);
 	// don't emit value changed: This is only used to update the value. It does not initiate changes
diff --git a/toolwidgets.cpp b/toolwidgets.cpp
--- a/toolwidgets.cpp
+++ b/toolwidgets.cpp
@@ -1,5 +1,6 @@
+#include <QtMath>
+
 #include "toolwidgets.h"
-#include "cmath"
 #include "smallUsefulFunctions.h"
 #include "utilsSystem.h"
 #include "configmanagerinterface.h"
@@ -112,7 +113,7 @@
 	if (event->modifiers() == Qt::ControlModifier) {
 		float numDegrees = event->delta() / 8.0f;
 		float numSteps = numDegrees / 15.0f;
-		scaleImage(std::pow(1.4, numSteps));
+		scaleImage(qPow(1.4, numSteps));
 		event->accept();
 	} else QScrollArea::wheelEvent(event);
 }
# HG changeset patch
# User Tim Hoffmann <thoffmann@texstudio.org>
# Date 1462117713 -7200
#      Sun May 01 17:48:33 2016 +0200
# Node ID 6403fade8002880e232fcf43de0ba169a510f01c
# Parent  5b16f01c3b6085c0f47633f6d9d41cb8be82ff51
QtCore/qmath.h -> QtMath

diff --git a/pdfviewer/pdfrendermanager.cpp b/pdfviewer/pdfrendermanager.cpp
--- a/pdfviewer/pdfrendermanager.cpp
+++ b/pdfviewer/pdfrendermanager.cpp
@@ -11,10 +11,10 @@
 
 #ifndef NO_POPPLER_PREVIEW
 
+#include <QtMath>
 #include "pdfrendermanager.h"
 #include "smallUsefulFunctions.h"
 #include "configmanagerinterface.h"
-#include <QtCore/qmath.h>
 
 const int kMaxPageZoom = 1000000;
 const qreal kMaxDpiForFullPage = isRetinaMac() ? 1000.0 : 500.0;
# HG changeset patch
# User Tim Hoffmann <thoffmann@texstudio.org>
# Date 1462120639 -7200
#      Sun May 01 18:37:19 2016 +0200
# Node ID 8413bbfd7a1cae9b708083a1d567821c50b97192
# Parent  6403fade8002880e232fcf43de0ba169a510f01c
fix qt4 compilation

diff --git a/pdfviewer/PDFDocument.cpp b/pdfviewer/PDFDocument.cpp
--- a/pdfviewer/PDFDocument.cpp
+++ b/pdfviewer/PDFDocument.cpp
@@ -30,7 +30,7 @@
 #include <QUrl>
 #include <QShortcut>
 #include <QtNumeric>
-#include <QtMath>
+#include <QtCore/qmath.h>
 
 #include "universalinputdialog.h"
 
diff --git a/pdfviewer/pdfrendermanager.cpp b/pdfviewer/pdfrendermanager.cpp
--- a/pdfviewer/pdfrendermanager.cpp
+++ b/pdfviewer/pdfrendermanager.cpp
@@ -11,10 +11,10 @@
 
 #ifndef NO_POPPLER_PREVIEW
 
-#include <QtMath>
 #include "pdfrendermanager.h"
 #include "smallUsefulFunctions.h"
 #include "configmanagerinterface.h"
+#include <QtCore/qmath.h>
 
 const int kMaxPageZoom = 1000000;
 const qreal kMaxDpiForFullPage = isRetinaMac() ? 1000.0 : 500.0;
# HG changeset patch
# User <jsundermeyer@sf.net>
# Date 1462121465 -7200
#      Sun May 01 18:51:05 2016 +0200
# Node ID c27118174e2aea21a47edead6dd11d34a0e73f61
# Parent  8413bbfd7a1cae9b708083a1d567821c50b97192
fix qt4 compile (qt5 tested as well)

diff --git a/pdfviewer/PDFDocument.cpp b/pdfviewer/PDFDocument.cpp
--- a/pdfviewer/PDFDocument.cpp
+++ b/pdfviewer/PDFDocument.cpp
@@ -29,7 +29,7 @@
 #include <QRegion>
 #include <QUrl>
 #include <QShortcut>
-#include <QtNumeric>
+#include <QtCore/qnumeric.h>
 #include <QtCore/qmath.h>
 
 #include "universalinputdialog.h"
@@ -2956,7 +2956,7 @@
 			pdfWidget->setFocus();
 
 		// set page viewer only once
-		int maxDigits = 1 + qFloor(std::log10(pdfWidget->realNumPages()));
+                int maxDigits = 1 + qFloor(log10(pdfWidget->realNumPages()));
 		//if (maxDigits < 2) maxDigits = 2;
 		leCurrentPage->setMaxLength(maxDigits);
 		leCurrentPage->setFixedWidth(fontMetrics().width(QString(maxDigits + 1, '#')));
diff --git a/toolwidgets.cpp b/toolwidgets.cpp
--- a/toolwidgets.cpp
+++ b/toolwidgets.cpp
@@ -1,4 +1,4 @@
-#include <QtMath>
+#include <QtCore/qmath.h>
 
 #include "toolwidgets.h"
 #include "smallUsefulFunctions.h"
